configfile: 'config/mvp.yml'

# Global variables from the config file
bids_dir = config['bids_dir']
output_dir = config['output_dir']
script_dir = config['script_dir']
subjects = config['subjects']
sessions = config['sessions']

rule all:
    input:
        expand(
            "{output_dir}/sub-{subject}/ses-{session}/anat/processed_volumetric.nii.gz",
            subject=subjects,
            session=sessions,
            output_dir=output_dir
        )

def get_t1w_input(wildcards):
    """
    Calculate the input T1w path based on the subject and session wildcards.
    """
    return (
        f"{config['bids_dir']}/sub-{wildcards.subject}/ses-{wildcards.session}/anat/"
        f"sub-{wildcards.subject}_ses-{wildcards.session}_{config['parameters']['proc_structural']['T1wStr']}.nii.gz"
    )

rule proc_structural:
    input:
        get_t1w_input
    output:
        processed_volumetric="{output_dir}/sub-{subject}/ses-{session}/anat/processed_volumetric.nii.gz"
    params:
        tmpDir="tmp",
        T1wStr=config["parameters"]["proc_structural"].get("T1wStr", "T1w.nii"),
        UNI=config["parameters"]["proc_structural"].get("UNI", "FALSE"),
        MF=config["parameters"]["proc_structural"].get("MF", 3),
        subject_short="{subject}",
        session_short="{session}",
    threads: config.get("threads", 4),
    shell:
        """
        echo "Running structural processing with subject={wildcards.subject}, session={wildcards.session}"
        bash {script_dir}/01_proc-structural.sh \
            {bids_dir} {wildcards.subject} {output_dir} -ses {wildcards.session} \
            --threads {threads} --tmpDir {params.tmpDir} --T1wStr {params.T1wStr} --uni {params.UNI} --mf {params.MF}
        """
