from snakebids import bids, generate_inputs, get_wildcard_constraints

configfile: 'config/mvp.yml'

# Global variables from the config file
bids_dir = config['bids_dir']
output_dir = config['output_dir']
subjects = config['subjects']
sessions = config['sessions']

inputs = generate_inputs(
    bids_dir=config["bids_dir"],
    pybids_inputs=config["pybids_inputs"],
    pybidsdb_dir=config.get("pybidsdb_dir"),
    pybidsdb_reset=config.get("pybidsdb_reset"),
    derivatives=config.get("derivatives", None),
    participant_label=config.get("participant_label", None),
    exclude_participant_label=config.get("exclude_participant_label", None),
    validate=not config.get("plugins.validator.skip", False)
)


rule all:
    input:
        expand(
            "{output_dir}/micapipe_v0.2.0/sub-{subject}/ses-{session}/anat/sub-{subject}_ses-{session}_space-nativepro_T1w.nii.gz",
            subject=subjects,
            session=sessions,
            output_dir=output_dir
        )

def get_t1w_input(wildcards):
    """
    Calculate the input T1w path based on the subject and session wildcards.
    """
    print("wildscards", wildcards)
    return (
        f"{config['bids_dir']}/sub-{wildcards.subject}/ses-{wildcards.session}/anat/"
        f"sub-{wildcards.subject}_ses-{wildcards.session}_{config['parameters']['proc_structural']['T1wStr']}.nii.gz"
    )

rule proc_structural:
    input:
        # get_t1w_input
        inputs['t1w'].expand()
    # output:
        # "/home/bic/eyang/processed_data2/micapipe_v0.2.0/sub-mri3T/ses-01/anat/sub-mri3T_ses-01_space-nativepro_T1w.nii.gz"
    output:
        bids(
            root='/home/bic/eyang/processed_data2/micapipe_v0.2.0',
            subject='{subject}',
            session='{session}',
            datatype='anat',
            space='nativepro',
            suffix='T1w.nii.gz',
        )
    params:
        tmpDir="tmp",
        T1wStr=config["parameters"]["proc_structural"].get("T1wStr", "T1w.nii"),
        UNI=config["parameters"]["proc_structural"].get("UNI", "FALSE"),
        MF=config["parameters"]["proc_structural"].get("MF", 45),
        fs_licence="$FREESURFER_HOME/license.txt",
    threads: config.get("threads", 4),
    shell:
        """
        micapipe -sub sub-{wildcards.subject} -out {output_dir} -bids {bids_dir} \
                -proc_structural -T1wStr {params.T1wStr} --mf {params.MF} \
            -fs_licence {params.fs_licence} -ses {wildcards.session}
        """

